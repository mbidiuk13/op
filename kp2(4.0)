#include <stdio.h>
#include <math.h>

// функція для запиту і валідації сторони трикутника
double getValidSide(const char *sideName) {
    double side = 0;
    int valid_input = 0;
    int is_valid = 0;

    do {
        printf("\nEnter the value of the side %s (from 0.001 to 1000): ", sideName);
        valid_input = scanf("%lf", &side);
        is_valid = (valid_input == 1 && side >= 0.001 && side <= 1000);
        if (!is_valid) {
            printf("Invalid input, try again\n");
            fflush(stdin); // очищення буферу вводу
        }
    } while (!is_valid);
    return side;
}

int main() {
    double a = 0, b = 0, c = 0; // довжини сторін трикутника
    unsigned n = 0; // кількість знаків після коми для виведення результатів
    char exitChar = 'e'; // символ для перевірки, чи хоче користувач вийти
    printf("This program calculates perimeter, area, heights, medians and bisectors of a triangle based on its sides.\n");

    do {
        // отримання і валідація сторін трикутника
        a = getValidSide("a");
        b = getValidSide("b");
        c = getValidSide("c");

        // перевірка чи існує такий трикутник
        if (a + b <= c || a + c <= b || b + c <= a) {
            printf("Invalid input, there is no such triangle, try again\n");
            continue; // перезапуск циклу
        }

        // валідація кількості знаків після коми
        int valid_input = 0; // змінна для перевірки коректності введених значень
        do {
            printf("Enter the number of decimal places from 1 to 14: ");
            valid_input = scanf("%u", &n);
            if (valid_input != 1 || n < 1 || n > 14) {
                printf("Invalid number of decimal places, try again\n");
                fflush(stdin);
            }
        } while (valid_input != 1 || n < 1 || n > 14);

        // обчислення характеристик трикутника
        double perimeter = (a + b + c);
        double p = perimeter / 2.0;
        double area = sqrt(p * (p - a) * (p - b) * (p - c));
        double Ha = (2.0 * area / a);
        double Hb = (2.0 * area / b);
        double Hc = (2.0 * area / c);
        double Ma = (sqrt(2.0 * pow(b, 2) + 2.0 * pow(c, 2) - pow(a, 2)) / 2.0);
        double Mb = (sqrt(2.0 * pow(a, 2) + 2.0 * pow(c, 2) - pow(b, 2)) / 2.0);
        double Mc = (sqrt(2.0 * pow(a, 2) + 2.0 * pow(b, 2) - pow(c, 2)) / 2.0);
        double Ba = (2.0 * sqrt(b * c * p * (p - a))) / (b + c);
        double Bb = (2.0 * sqrt(a * c * p * (p - b))) / (a + c);
        double Bc = (2.0 * sqrt(a * b * p * (p - c))) / (a + b);

        // вивід результатів
        printf("\nPerimeter: %.*lf (%.14e)", n, perimeter, perimeter);
        printf("\nArea: %.*lf (%.14e)", n, area, area);
        printf("\nHeight(a): %.*lf (%.14e)", n, Ha, Ha);
        printf("\nHeight(b): %.*lf (%.14e)", n, Hb, Hb);
        printf("\nHeight(c): %.*lf (%.14e)", n, Hc, Hc);
        printf("\nMedian(a): %.*lf (%.14e)", n, Ma, Ma);
        printf("\nMedian(b): %.*lf (%.14e)", n, Mb, Mb);
        printf("\nMedian(c): %.*lf (%.14e)", n, Mc, Mc);
        printf("\nBisector(a): %.*lf (%.14e)", n, Ba, Ba);
        printf("\nBisector(b): %.*lf (%.14e)", n, Bb, Bb);
        printf("\nBisector(c): %.*lf (%.14e)", n, Bc, Bc);
        printf("\nMore accurate values are given in brackets");

        printf("\nWould you like to exit? (y/n): "); // запит на вихід
        scanf(" %c", &exitChar);
        fflush(stdin);

    }
    while (exitChar!= 'y' && exitChar != 'Y');// завершення програми
    return 0;
}
